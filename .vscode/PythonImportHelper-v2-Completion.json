[
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "rest_framework",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "rest_framework",
        "description": "rest_framework",
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "UserCreateSerializer",
        "importPath": "djoser.serializers",
        "description": "djoser.serializers",
        "isExtraImport": true,
        "detail": "djoser.serializers",
        "documentation": {}
    },
    {
        "label": "TokenCreateSerializer",
        "importPath": "djoser.serializers",
        "description": "djoser.serializers",
        "isExtraImport": true,
        "detail": "djoser.serializers",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "ProtocolTypeRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "URLRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "AuthMiddlewareStack",
        "importPath": "channels.auth",
        "description": "channels.auth",
        "isExtraImport": true,
        "detail": "channels.auth",
        "documentation": {}
    },
    {
        "label": "ws_url",
        "importPath": "myapp.routing",
        "description": "myapp.routing",
        "isExtraImport": true,
        "detail": "myapp.routing",
        "documentation": {}
    },
    {
        "label": "AllowedHostsOriginValidator",
        "importPath": "channels.security.websocket",
        "description": "channels.security.websocket",
        "isExtraImport": true,
        "detail": "channels.security.websocket",
        "documentation": {}
    },
    {
        "label": "SessionMiddlewareStack",
        "importPath": "channels.sessions",
        "description": "channels.sessions",
        "isExtraImport": true,
        "detail": "channels.sessions",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "WebsocketConsumer",
        "importPath": "channels.generic.websocket",
        "description": "channels.generic.websocket",
        "isExtraImport": true,
        "detail": "channels.generic.websocket",
        "documentation": {}
    },
    {
        "label": "AsyncWebsocketConsumer",
        "importPath": "channels.generic.websocket",
        "description": "channels.generic.websocket",
        "isExtraImport": true,
        "detail": "channels.generic.websocket",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "Account",
        "importPath": "playground.models",
        "description": "playground.models",
        "isExtraImport": true,
        "detail": "playground.models",
        "documentation": {}
    },
    {
        "label": "Groups",
        "importPath": "playground.models",
        "description": "playground.models",
        "isExtraImport": true,
        "detail": "playground.models",
        "documentation": {}
    },
    {
        "label": "Messages",
        "importPath": "playground.models",
        "description": "playground.models",
        "isExtraImport": true,
        "detail": "playground.models",
        "documentation": {}
    },
    {
        "label": "Account",
        "importPath": "playground.models",
        "description": "playground.models",
        "isExtraImport": true,
        "detail": "playground.models",
        "documentation": {}
    },
    {
        "label": "GroupSerializer",
        "importPath": "playground.serializers",
        "description": "playground.serializers",
        "isExtraImport": true,
        "detail": "playground.serializers",
        "documentation": {}
    },
    {
        "label": "MessageSerializer",
        "importPath": "playground.serializers",
        "description": "playground.serializers",
        "isExtraImport": true,
        "detail": "playground.serializers",
        "documentation": {}
    },
    {
        "label": "SimpleGroupSerializer",
        "importPath": "playground.serializers",
        "description": "playground.serializers",
        "isExtraImport": true,
        "detail": "playground.serializers",
        "documentation": {}
    },
    {
        "label": "SimpleMessageSerializer",
        "importPath": "playground.serializers",
        "description": "playground.serializers",
        "isExtraImport": true,
        "detail": "playground.serializers",
        "documentation": {}
    },
    {
        "label": "database_sync_to_async",
        "importPath": "channels.db",
        "description": "channels.db",
        "isExtraImport": true,
        "detail": "channels.db",
        "documentation": {}
    },
    {
        "label": "get_channel_layer",
        "importPath": "channels.layers",
        "description": "channels.layers",
        "isExtraImport": true,
        "detail": "channels.layers",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "HttpRequest",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JSONRenderer",
        "importPath": "rest_framework.renderers",
        "description": "rest_framework.renderers",
        "isExtraImport": true,
        "detail": "rest_framework.renderers",
        "documentation": {}
    },
    {
        "label": "MessageViewSet",
        "importPath": "playground.views",
        "description": "playground.views",
        "isExtraImport": true,
        "detail": "playground.views",
        "documentation": {}
    },
    {
        "label": "ContentNotRenderedError",
        "importPath": "django.template.response",
        "description": "django.template.response",
        "isExtraImport": true,
        "detail": "django.template.response",
        "documentation": {}
    },
    {
        "label": "async_to_sync",
        "importPath": "asgiref.sync",
        "description": "asgiref.sync",
        "isExtraImport": true,
        "detail": "asgiref.sync",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "pre_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework_nested",
        "description": "rest_framework_nested",
        "isExtraImport": true,
        "detail": "rest_framework_nested",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "IsAuthenticatedOrReadOnly",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0001_initial",
        "description": "core.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "core.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CoreConfig",
        "kind": 6,
        "importPath": "core.apps",
        "description": "core.apps",
        "peekOfCode": "class CoreConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core'",
        "detail": "core.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class User(AbstractUser):\n    email = models.EmailField(unique=True)",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "UserCreateSerializer",
        "kind": 6,
        "importPath": "core.serializers",
        "description": "core.serializers",
        "peekOfCode": "class UserCreateSerializer(BaseUserCreateSerializer):\n    class Meta(BaseUserCreateSerializer.Meta):\n        fields = ['email','username','password','first_name','last_name']\nclass TokenCreateSerializer(BaseTokenCreateSerializer):\n    pass\n# {\n#     \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY4ODk5ODgwNCwiaWF0IjoxNjg4OTEyNDA0LCJqdGkiOiI3NGM2ODNjNzZhMTc0ZTJhYjYxYzgwYjVhZDAzMDk5OSIsInVzZXJfaWQiOjF9.UsEQLMGgmAdy3pOSlyKdzBanTheaIKdPySZoDw9WJVg\",\n#     \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjg4OTk4ODA0LCJpYXQiOjE2ODg5MTI0MDQsImp0aSI6IjVjNGFhMDUwYmMzZDRkY2ZiMWFkM2ViOTBjMWVlYjhiIiwidXNlcl9pZCI6MX0.zzFMGi9J1SnAA-HRQUxAX153CiOB1F7R5AZAgkxPOSI\"\n# }",
        "detail": "core.serializers",
        "documentation": {}
    },
    {
        "label": "TokenCreateSerializer",
        "kind": 6,
        "importPath": "core.serializers",
        "description": "core.serializers",
        "peekOfCode": "class TokenCreateSerializer(BaseTokenCreateSerializer):\n    pass\n# {\n#     \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY4ODk5ODgwNCwiaWF0IjoxNjg4OTEyNDA0LCJqdGkiOiI3NGM2ODNjNzZhMTc0ZTJhYjYxYzgwYjVhZDAzMDk5OSIsInVzZXJfaWQiOjF9.UsEQLMGgmAdy3pOSlyKdzBanTheaIKdPySZoDw9WJVg\",\n#     \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjg4OTk4ODA0LCJpYXQiOjE2ODg5MTI0MDQsImp0aSI6IjVjNGFhMDUwYmMzZDRkY2ZiMWFkM2ViOTBjMWVlYjhiIiwidXNlcl9pZCI6MX0.zzFMGi9J1SnAA-HRQUxAX153CiOB1F7R5AZAgkxPOSI\"\n# }",
        "detail": "core.serializers",
        "documentation": {}
    },
    {
        "label": "django_asgi_app",
        "kind": 5,
        "importPath": "djangochannels.asgi",
        "description": "djangochannels.asgi",
        "peekOfCode": "django_asgi_app = get_asgi_application()\napplication = ProtocolTypeRouter({\n    \"http\": django_asgi_app,\n    \"websocket\": AllowedHostsOriginValidator(\n        SessionMiddlewareStack(\n            AuthMiddlewareStack(\n                URLRouter(ws_url)\n            )\n        )\n    )",
        "detail": "djangochannels.asgi",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "djangochannels.asgi",
        "description": "djangochannels.asgi",
        "peekOfCode": "application = ProtocolTypeRouter({\n    \"http\": django_asgi_app,\n    \"websocket\": AllowedHostsOriginValidator(\n        SessionMiddlewareStack(\n            AuthMiddlewareStack(\n                URLRouter(ws_url)\n            )\n        )\n    )\n})",
        "detail": "djangochannels.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-ae-lry6f!rz3ke%zd*2e_%hx-s*sb8=1@)23)y=j0)fnx9spnr'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\nCORS_ALLOWED_ORIGINS = [\n    \"http://127.0.0.1:5500\",",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-ae-lry6f!rz3ke%zd*2e_%hx-s*sb8=1@)23)y=j0)fnx9spnr'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\nCORS_ALLOWED_ORIGINS = [\n    \"http://127.0.0.1:5500\",\n]\n# Application definition\nINSTALLED_APPS = [\n    \"daphne\",",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\nCORS_ALLOWED_ORIGINS = [\n    \"http://127.0.0.1:5500\",\n]\n# Application definition\nINSTALLED_APPS = [\n    \"daphne\",\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\nCORS_ALLOWED_ORIGINS = [\n    \"http://127.0.0.1:5500\",\n]\n# Application definition\nINSTALLED_APPS = [\n    \"daphne\",\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    \"http://127.0.0.1:5500\",\n]\n# Application definition\nINSTALLED_APPS = [\n    \"daphne\",\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"daphne\",\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'djoser',",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    \"corsheaders.middleware.CorsMiddleware\",\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "ROOT_URLCONF = 'djangochannels.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "ASGI_APPLICATION",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "ASGI_APPLICATION = 'djangochannels.asgi.application'\nCHANNEL_LAYERS = {\n    \"default\": {\n        \"BACKEND\": \"channels.layers.InMemoryChannelLayer\"\n    }\n}\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "CHANNEL_LAYERS",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "CHANNEL_LAYERS = {\n    \"default\": {\n        \"BACKEND\": \"channels.layers.InMemoryChannelLayer\"\n    }\n}\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'djangochannel',\n        'HOST':'localhost',\n        'USER':'root',\n        'PORT':3306,\n        'PASSWORD':os.getenv('DB_PASSWORD')\n    }\n}",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    )\n}\nDJOSER = {\n    'SERIALIZERS':{\n        'user_create':'core.serializers.UserCreateSerializer',\n        'token_create': 'core.serializers.TokenCreateSerializer',\n    }",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "DJOSER",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "DJOSER = {\n    'SERIALIZERS':{\n        'user_create':'core.serializers.UserCreateSerializer',\n        'token_create': 'core.serializers.TokenCreateSerializer',\n    }\n}\nSIMPLE_JWT = {\n    'AUTH_HEADER_TYPES': ('JWT',),\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(days=1),\n}",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    'AUTH_HEADER_TYPES': ('JWT',),\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(days=1),\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'core.User'",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'core.User'",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'core.User'",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'core.User'",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'core.User'",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "djangochannels.settings",
        "description": "djangochannels.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'core.User'",
        "detail": "djangochannels.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "djangochannels.urls",
        "description": "djangochannels.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('playground/',include('playground.urls')),\n    # path('api-auth/', include('rest_framework.urls')),\n    path('auth/', include('djoser.urls')),\n    path('auth/', include('djoser.urls.jwt')),\n]",
        "detail": "djangochannels.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "djangochannels.wsgi",
        "description": "djangochannels.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "djangochannels.wsgi",
        "documentation": {}
    },
    {
        "label": "MyappConfig",
        "kind": 6,
        "importPath": "myapp.apps",
        "description": "myapp.apps",
        "peekOfCode": "class MyappConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'myapp'\n    def ready(self) -> None:\n        import playground.signals.handlers",
        "detail": "myapp.apps",
        "documentation": {}
    },
    {
        "label": "GlobalConnectConsumer",
        "kind": 6,
        "importPath": "myapp.consumers",
        "description": "myapp.consumers",
        "peekOfCode": "class GlobalConnectConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        jwt_token = self.scope['url_route']['kwargs']['string']\n        self.group_id = \"global\"\n        auth = await jwt_verify(jwt_token)\n        if auth.status_code == 200:\n            data = auth.json()\n            self.scope[\"user\"] = data\n            await self.accept()\n            my_groups =await self.my_group_db()",
        "detail": "myapp.consumers",
        "documentation": {}
    },
    {
        "label": "GroupConsumer",
        "kind": 6,
        "importPath": "myapp.consumers",
        "description": "myapp.consumers",
        "peekOfCode": "class GroupConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        channel_layer = get_channel_layer()\n        global_group = \"global\"\n        self.group_id = str(self.scope['url_route']['kwargs']['pk'])\n        jwt_token = self.scope['url_route']['kwargs']['string']\n        auth = await jwt_verify(jwt_token)\n        if auth.status_code == 200:\n            data = auth.json()\n            self.scope[\"user\"] = data",
        "detail": "myapp.consumers",
        "documentation": {}
    },
    {
        "label": "GroupConsumerTest",
        "kind": 6,
        "importPath": "myapp.consumers",
        "description": "myapp.consumers",
        "peekOfCode": "class GroupConsumerTest(AsyncWebsocketConsumer):\n    async def connect(self):\n        await self.accept()\n        for i in range(10):\n            print(i)\n            await self.channel_layer.group_add(str(i), self.channel_name)\n        layers = get_channel_layer()\n        print(layers.__dict__)\n    async def receive(self, text_data):\n        await self.channel_layer.group_send(",
        "detail": "myapp.consumers",
        "documentation": {}
    },
    {
        "label": "MyConsumer",
        "kind": 6,
        "importPath": "myapp.consumers",
        "description": "myapp.consumers",
        "peekOfCode": "class MyConsumer(WebsocketConsumer):\n    def connect(self):\n        jwt_token = self.scope['url_route']['kwargs']['string']\n        x = requests.get(\"http://127.0.0.1:8000/auth/users/\",headers={'Authorization': f'JWT {jwt_token}'})\n        if x.status_code == 200:\n            data = x.json()\n            self.scope[\"user\"] = data\n            self.accept()\n        else:\n            self.close()",
        "detail": "myapp.consumers",
        "documentation": {}
    },
    {
        "label": "AsyncMyConsumer",
        "kind": 6,
        "importPath": "myapp.consumers",
        "description": "myapp.consumers",
        "peekOfCode": "class AsyncMyConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        await self.accept()\n        await self.all_message()        \n    @database_sync_to_async\n    def database(self):\n        queryset = Messages.objects.filter(account_id = self.scope['user'].id).all()\n        serializer = MessageSerializer(queryset, many=True)\n        serialized_data = serializer.data\n        print(serialized_data)",
        "detail": "myapp.consumers",
        "documentation": {}
    },
    {
        "label": "HomePageConsumer",
        "kind": 6,
        "importPath": "myapp.consumers",
        "description": "myapp.consumers",
        "peekOfCode": "class HomePageConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        self.group_id = \"everyone\"\n        print(self.scope[\"user\"])\n        await self.accept()\n        joined_groups = await self.groups_database_joined()\n        await self.send_data(\"joined_groups\",joined_groups)\n        availabe_groups = await self.groups_database()\n        await self.send_data(\"availabe_groups\",availabe_groups)\n        await self.channel_layer.group_add(self.group_id,self.channel_name)",
        "detail": "myapp.consumers",
        "documentation": {}
    },
    {
        "label": "jwt_verify",
        "kind": 2,
        "importPath": "myapp.consumers",
        "description": "myapp.consumers",
        "peekOfCode": "def jwt_verify(jwt_token):\n    auth = requests.get(\"http://127.0.0.1:8000/auth/users/\",headers={'Authorization': f'JWT {jwt_token}'})\n    return auth\nclass GlobalConnectConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        jwt_token = self.scope['url_route']['kwargs']['string']\n        self.group_id = \"global\"\n        auth = await jwt_verify(jwt_token)\n        if auth.status_code == 200:\n            data = auth.json()",
        "detail": "myapp.consumers",
        "documentation": {}
    },
    {
        "label": "ws_url",
        "kind": 5,
        "importPath": "myapp.routing",
        "description": "myapp.routing",
        "peekOfCode": "ws_url = [\n    path('myapp/global/<string>',GlobalConnectConsumer.as_asgi()),\n    path('myapp/test/<string>',MyConsumer.as_asgi()),\n    path('myapp/asynctest/',AsyncMyConsumer.as_asgi()),\n    path('myapp/groups/<int:pk>/<string>',GroupConsumer.as_asgi()),\n    path('myapp/groups/test',GroupConsumerTest.as_asgi()),\n    path('myapp/home/',HomePageConsumer.as_asgi())\n]",
        "detail": "myapp.routing",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "playground.migrations.0001_initial",
        "description": "playground.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Account',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "playground.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "playground.migrations.0002_rename_totle_groups_title",
        "description": "playground.migrations.0002_rename_totle_groups_title",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('playground', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='groups',\n            old_name='totle',\n            new_name='title',\n        ),",
        "detail": "playground.migrations.0002_rename_totle_groups_title",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "playground.migrations.0003_account_joined_groups",
        "description": "playground.migrations.0003_account_joined_groups",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('playground', '0002_rename_totle_groups_title'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='account',\n            name='joined_groups',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "playground.migrations.0003_account_joined_groups",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "playground.migrations.0004_alter_messages_account",
        "description": "playground.migrations.0004_alter_messages_account",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('playground', '0003_account_joined_groups'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='messages',\n            name='account',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playground.account'),\n        ),",
        "detail": "playground.migrations.0004_alter_messages_account",
        "documentation": {}
    },
    {
        "label": "create_account_when_create_user",
        "kind": 2,
        "importPath": "playground.signals.handlers",
        "description": "playground.signals.handlers",
        "peekOfCode": "def create_account_when_create_user(sender,**kwargs):\n    if kwargs['created']:\n        print(kwargs)\n        account = Account.objects.create(user = kwargs['instance'])\n        account.save()",
        "detail": "playground.signals.handlers",
        "documentation": {}
    },
    {
        "label": "@receiver(post_save,sender",
        "kind": 5,
        "importPath": "playground.signals.handlers",
        "description": "playground.signals.handlers",
        "peekOfCode": "@receiver(post_save,sender = settings.AUTH_USER_MODEL)\ndef create_account_when_create_user(sender,**kwargs):\n    if kwargs['created']:\n        print(kwargs)\n        account = Account.objects.create(user = kwargs['instance'])\n        account.save()",
        "detail": "playground.signals.handlers",
        "documentation": {}
    },
    {
        "label": "PlaygroundConfig",
        "kind": 6,
        "importPath": "playground.apps",
        "description": "playground.apps",
        "peekOfCode": "class PlaygroundConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'playground'",
        "detail": "playground.apps",
        "documentation": {}
    },
    {
        "label": "Account",
        "kind": 6,
        "importPath": "playground.models",
        "description": "playground.models",
        "peekOfCode": "class Account(models.Model):\n    user = models.OneToOneField(settings.AUTH_USER_MODEL,on_delete=models.CASCADE)\n    joined_groups = models.BooleanField(default=False)\n    def first_name(self):\n        return self.user.first_name\n    def last_name(self):\n        return self.user.last_name\n    def __str__(self):\n        return self.first_name +' '+self.last_name\nclass Messages(models.Model):",
        "detail": "playground.models",
        "documentation": {}
    },
    {
        "label": "Messages",
        "kind": 6,
        "importPath": "playground.models",
        "description": "playground.models",
        "peekOfCode": "class Messages(models.Model):\n    text = models.CharField(max_length=50)\n    account = models.ForeignKey(Account,on_delete=models.CASCADE)\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return self.text\nclass Groups(models.Model):\n    title = models.CharField(max_length=50)\n    accounts = models.ManyToManyField(Account)\n    messages = models.ManyToManyField(Messages)",
        "detail": "playground.models",
        "documentation": {}
    },
    {
        "label": "Groups",
        "kind": 6,
        "importPath": "playground.models",
        "description": "playground.models",
        "peekOfCode": "class Groups(models.Model):\n    title = models.CharField(max_length=50)\n    accounts = models.ManyToManyField(Account)\n    messages = models.ManyToManyField(Messages)",
        "detail": "playground.models",
        "documentation": {}
    },
    {
        "label": "AccountSerializer",
        "kind": 6,
        "importPath": "playground.serializers",
        "description": "playground.serializers",
        "peekOfCode": "class AccountSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Account\n        fields = ['id', 'user', 'joined_groups', 'first_name', 'last_name']\n        read_only_fields = ['first_name', 'last_name']\nclass SimpleMessageSerializer(serializers.ModelSerializer):\n    account_name = serializers.SerializerMethodField()\n    class Meta:\n        model = Messages\n        fields = ['account_name','id', 'text','account_id', 'created_at']",
        "detail": "playground.serializers",
        "documentation": {}
    },
    {
        "label": "SimpleMessageSerializer",
        "kind": 6,
        "importPath": "playground.serializers",
        "description": "playground.serializers",
        "peekOfCode": "class SimpleMessageSerializer(serializers.ModelSerializer):\n    account_name = serializers.SerializerMethodField()\n    class Meta:\n        model = Messages\n        fields = ['account_name','id', 'text','account_id', 'created_at']\n    def get_account_name(self, obj):\n        account_id = obj.account_id\n        try:\n            account = Account.objects.get(id=account_id)\n            full_name = f\"{account.user.first_name} {account.user.last_name}\"",
        "detail": "playground.serializers",
        "documentation": {}
    },
    {
        "label": "MessageSerializer",
        "kind": 6,
        "importPath": "playground.serializers",
        "description": "playground.serializers",
        "peekOfCode": "class MessageSerializer(serializers.ModelSerializer):\n    account_name = serializers.SerializerMethodField()\n    class Meta:\n        model = Messages\n        fields = ['account_name','id', 'text','account_id', 'created_at']\n    def get_account_name(self, obj):\n        account_id = obj.get('account_id')\n        try:\n            account = Account.objects.get(id=account_id)\n            full_name = f\"{account.user.first_name} {account.user.last_name}\"",
        "detail": "playground.serializers",
        "documentation": {}
    },
    {
        "label": "GroupSerializer",
        "kind": 6,
        "importPath": "playground.serializers",
        "description": "playground.serializers",
        "peekOfCode": "class GroupSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Groups\n        fields = ['id','title','messages','accounts']\nclass SimpleGroupSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Groups\n        fields = ['id','title','members']\n    members = serializers.SerializerMethodField()\n    def get_members(self,obj):",
        "detail": "playground.serializers",
        "documentation": {}
    },
    {
        "label": "SimpleGroupSerializer",
        "kind": 6,
        "importPath": "playground.serializers",
        "description": "playground.serializers",
        "peekOfCode": "class SimpleGroupSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Groups\n        fields = ['id','title','members']\n    members = serializers.SerializerMethodField()\n    def get_members(self,obj):\n        account = Groups.objects.get(id = obj.id)\n        return account.accounts.all().count()",
        "detail": "playground.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "playground.urls",
        "description": "playground.urls",
        "peekOfCode": "router = routers.SimpleRouter()\nrouter.register('messages',MessageViewSet,basename='message-list')\nurlpatterns = [\n    path('hello/',hello),\n    path('', include(router.urls)),\n]",
        "detail": "playground.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "playground.urls",
        "description": "playground.urls",
        "peekOfCode": "urlpatterns = [\n    path('hello/',hello),\n    path('', include(router.urls)),\n]",
        "detail": "playground.urls",
        "documentation": {}
    },
    {
        "label": "MessageViewSet",
        "kind": 6,
        "importPath": "playground.views",
        "description": "playground.views",
        "peekOfCode": "class MessageViewSet(ModelViewSet):\n    permission_classes = [IsAuthenticatedOrReadOnly]\n    serializer_class = MessageSerializer\n    def get_queryset(self):\n        if self.request.method == 'GET':\n            print(self.request.user)\n            return Messages.objects.filter(account_id=self.request.user.id).all()\n    def get_serializer_context(self):\n        return {\n            'user_id':self.request.user.id",
        "detail": "playground.views",
        "documentation": {}
    },
    {
        "label": "hello",
        "kind": 2,
        "importPath": "playground.views",
        "description": "playground.views",
        "peekOfCode": "def hello(request):\n    return render(request,'hello.html')\nclass MessageViewSet(ModelViewSet):\n    permission_classes = [IsAuthenticatedOrReadOnly]\n    serializer_class = MessageSerializer\n    def get_queryset(self):\n        if self.request.method == 'GET':\n            print(self.request.user)\n            return Messages.objects.filter(account_id=self.request.user.id).all()\n    def get_serializer_context(self):",
        "detail": "playground.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'djangochannels.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]